const { Feedback } = require('../../models');

const feedbackInProgress = new Map();

function initializeFeedback(fromNumber, username, booking_id) {
  feedbackInProgress.set(fromNumber, { doctor: username, booking_id });
}

async function updateFeedbackInProgress(fromNumber, field, value) {
  const currentFeedback = feedbackInProgress.get(fromNumber) || {};
  currentFeedback[field] = value;
  feedbackInProgress.set(fromNumber, currentFeedback);

  // Save or update the feedback in the database
  await saveFeedback(fromNumber);
}

async function saveFeedback(fromNumber) {
  try {
    const feedbackData = feedbackInProgress.get(fromNumber);
    if (!feedbackData) {
      throw new Error('No feedback data found');
    }

    const { doctor, booking_id, rating, feedback, reasonForVisit, ...jsonData } = feedbackData;

    // Find existing feedback or create a new one
    let [feedbackRecord, created] = await Feedback.findOrCreate({
      where: { fromNumber, booking_id },
      defaults: {
        doctor,
        rating: rating || null,
        feedback: feedback || null,
        reasonForVisit: reasonForVisit || null,
        jsonData
      }
    });

    // If the record already existed, update it
    if (!created) {
      await feedbackRecord.update({
        rating: rating || feedbackRecord.rating,
        feedback: feedback || feedbackRecord.feedback,
        reasonForVisit: reasonForVisit || feedbackRecord.reasonForVisit,
        jsonData: { ...feedbackRecord.jsonData, ...jsonData }
      });
    }

    return feedbackRecord;
  } catch (error) {
    console.error('Error saving feedback:', error);
    throw error;
  }
}

function getFeedbackInProgress(fromNumber) {
  return feedbackInProgress.get(fromNumber) || {};
}

module.exports = { initializeFeedback, updateFeedbackInProgress, saveFeedback, getFeedbackInProgress };